services:
  mongodb:
    image: mongo:8-noble
    restart: on-failure
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=compare-it
    volumes:
      - mongodb-data:/data/db
    healthcheck:
      test: mongosh --eval 'db.adminCommand("ping").ok' mongodb://$$MONGO_INITDB_ROOT_USERNAME:$$MONGO_INITDB_ROOT_PASSWORD@localhost:27017/admin --quiet
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 60s

  smtp4dev:
    image: rnwood/smtp4dev
    restart: on-failure
    ports:
      - "5000:80"
      - "2525:25"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    restart: on-failure
    depends_on:
      - mongodb
      - smtp4dev
    environment:
      - CORS_ALLOWED_ORIGINS=https://localhost
      - SPRING_DATA_MONGODB_URI=mongodb://root:password@mongodb:27017/compare-it?authSource=admin
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    restart: on-failure
    depends_on:
      - backend
    env_file:
      - ./frontend/.env.production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
  
  prometheus:
    build:
      context: infra-services/prometheus
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - backend
  grafana:
    build:
      context: infra-services/grafana
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - prometheus
    environment:
      - GF_SERVER_ROOT_URL=https://localhost/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
    volumes:
      - grafana-data:/var/lib/grafana

  caddy:
    build:
      context: infra-services/caddy
      dockerfile: Dockerfile
    restart: on-failure
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - grafana

volumes:
  mongodb-data:
  grafana-data: